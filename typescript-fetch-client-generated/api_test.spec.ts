/**
 * Brewery Project
 * Specification for OpenAPI Course
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This file is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the file manually.
 */

import * as api from "./api"
import { Configuration } from "./configuration"

const config: Configuration = {}

describe("BeersApi", () => {
  let instance: api.BeersApi
  beforeEach(function() {
    instance = new api.BeersApi(config)
  });

  test("deleteBeerByIdV1", () => {
    const beerId: string = "38400000-8cf0-11bd-b23e-10b96e4ef00d"
    return expect(instance.deleteBeerByIdV1(beerId, {})).resolves.toBe(null)
  })
  test("getBeerByIdV1", () => {
    const beerId: string = "38400000-8cf0-11bd-b23e-10b96e4ef00d"
    return expect(instance.getBeerByIdV1(beerId, {})).resolves.toBe(null)
  })
  test("listBeersV1", () => {
    const pageNumber: number = 56
    const pageSize: number = 56
    return expect(instance.listBeersV1(pageNumber, pageSize, {})).resolves.toBe(null)
  })
  test("updateBeerByIdV1", () => {
    const beerId: string = "38400000-8cf0-11bd-b23e-10b96e4ef00d"
    const body: api.Beer = undefined
    return expect(instance.updateBeerByIdV1(beerId, body, {})).resolves.toBe(null)
  })
  test("v1BeersPost", () => {
    const body: api.Beer = undefined
    return expect(instance.v1BeersPost(body, {})).resolves.toBe(null)
  })
})

describe("CustomersApi", () => {
  let instance: api.CustomersApi
  beforeEach(function() {
    instance = new api.CustomersApi(config)
  });

  test("deleteCustomerByIdV1", () => {
    const customerId: string = "38400000-8cf0-11bd-b23e-10b96e4ef00d"
    return expect(instance.deleteCustomerByIdV1(customerId, {})).resolves.toBe(null)
  })
  test("getCustomerByIdV1", () => {
    const customerId: string = "38400000-8cf0-11bd-b23e-10b96e4ef00d"
    return expect(instance.getCustomerByIdV1(customerId, {})).resolves.toBe(null)
  })
  test("listCustomersV1", () => {
    const pageNumber: number = 56
    const pageSize: number = 56
    return expect(instance.listCustomersV1(pageNumber, pageSize, {})).resolves.toBe(null)
  })
  test("updateCustomerByIdV1", () => {
    const body: api.Customer = undefined
    const customerId: string = "38400000-8cf0-11bd-b23e-10b96e4ef00d"
    return expect(instance.updateCustomerByIdV1(body, customerId, {})).resolves.toBe(null)
  })
  test("v1CustomersPost", () => {
    const body: api.Customer = undefined
    return expect(instance.v1CustomersPost(body, {})).resolves.toBe(null)
  })
})

describe("OrderServiceApi", () => {
  let instance: api.OrderServiceApi
  beforeEach(function() {
    instance = new api.OrderServiceApi(config)
  });

  test("v1CustomersCustomerIdOrdersPost", () => {
    const customerId: string = "38400000-8cf0-11bd-b23e-10b96e4ef00d"
    const body: api.BeerOrder = undefined
    return expect(instance.v1CustomersCustomerIdOrdersPost(customerId, body, {})).resolves.toBe(null)
  })
})

